// <auto-generated />
using System;
using GroceryStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GroceryStoreAPI.Migrations
{
    [DbContext(typeof(GroceryStoreContext))]
    partial class GroceryStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroceryStoreAPI.Models.GroceryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GroceryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Fruits",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3628),
                            Description = "Fresh red apples",
                            ImageUrl = "https://images.unsplash.com/photo-1560806887-1e4cd0b6cbd6?w=300",
                            IsAvailable = true,
                            Name = "Apples",
                            Price = 2.99m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Category = "Fruits",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3637),
                            Description = "Ripe yellow bananas",
                            ImageUrl = "https://images.unsplash.com/photo-1571771894821-ce9b6c11b08e?w=300",
                            IsAvailable = true,
                            Name = "Bananas",
                            Price = 1.99m,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 9,
                            Category = "Fruits",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3640),
                            Description = "Juicy navel oranges",
                            ImageUrl = "https://images.unsplash.com/photo-1547036967-23d11aacaee0?w=300",
                            IsAvailable = true,
                            Name = "Oranges",
                            Price = 3.49m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 10,
                            Category = "Fruits",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3645),
                            Description = "Sweet green grapes",
                            ImageUrl = "https://images.unsplash.com/photo-1537640538966-79f369143f8f?w=300",
                            IsAvailable = true,
                            Name = "Grapes",
                            Price = 4.99m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 11,
                            Category = "Fruits",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3647),
                            Description = "Fresh strawberries",
                            ImageUrl = "https://images.unsplash.com/photo-1464965911861-746a04b4bca6?w=300",
                            IsAvailable = true,
                            Name = "Strawberries",
                            Price = 5.99m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 3,
                            Category = "Dairy",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3649),
                            Description = "Fresh whole milk",
                            ImageUrl = "https://images.unsplash.com/photo-1550583724-b2692b85b150?w=300",
                            IsAvailable = true,
                            Name = "Milk",
                            Price = 3.49m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 5,
                            Category = "Dairy",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3652),
                            Description = "Farm fresh eggs",
                            ImageUrl = "https://images.unsplash.com/photo-1582722872445-44dc5f7e3c8f?w=300",
                            IsAvailable = true,
                            Name = "Eggs",
                            Price = 4.99m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 12,
                            Category = "Dairy",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3654),
                            Description = "Cheddar cheese block",
                            ImageUrl = "https://images.unsplash.com/photo-1486297678162-eb2a19b0a32d?w=300",
                            IsAvailable = true,
                            Name = "Cheese",
                            Price = 6.99m,
                            Quantity = 45
                        },
                        new
                        {
                            Id = 13,
                            Category = "Dairy",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3718),
                            Description = "Greek vanilla yogurt",
                            ImageUrl = "https://images.unsplash.com/photo-1571212515416-fca88c2d2c90?w=300",
                            IsAvailable = true,
                            Name = "Yogurt",
                            Price = 1.99m,
                            Quantity = 70
                        },
                        new
                        {
                            Id = 14,
                            Category = "Dairy",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3721),
                            Description = "Unsalted butter",
                            ImageUrl = "https://images.unsplash.com/photo-1589985270826-4b7bb135bc9d?w=300",
                            IsAvailable = true,
                            Name = "Butter",
                            Price = 4.49m,
                            Quantity = 35
                        },
                        new
                        {
                            Id = 4,
                            Category = "Bakery",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3723),
                            Description = "Whole wheat bread",
                            ImageUrl = "https://images.unsplash.com/photo-1509440159596-0249088772ff?w=300",
                            IsAvailable = true,
                            Name = "Bread",
                            Price = 2.49m,
                            Quantity = 75
                        },
                        new
                        {
                            Id = 15,
                            Category = "Bakery",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3725),
                            Description = "Buttery croissants",
                            ImageUrl = "https://images.unsplash.com/photo-1555507036-ab794f4afe5e?w=300",
                            IsAvailable = true,
                            Name = "Croissants",
                            Price = 3.99m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 16,
                            Category = "Bakery",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3728),
                            Description = "Everything bagels",
                            ImageUrl = "https://images.unsplash.com/photo-1551024506-0bccd828d307?w=300",
                            IsAvailable = true,
                            Name = "Bagels",
                            Price = 4.49m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 17,
                            Category = "Bakery",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3730),
                            Description = "Blueberry muffins",
                            ImageUrl = "https://images.unsplash.com/photo-1607958996333-41aef7caefaa?w=300",
                            IsAvailable = true,
                            Name = "Muffins",
                            Price = 5.99m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 18,
                            Category = "Bakery",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3732),
                            Description = "Glazed donuts",
                            ImageUrl = "https://images.unsplash.com/photo-1551024601-bec78aea704b?w=300",
                            IsAvailable = true,
                            Name = "Donuts",
                            Price = 6.99m,
                            Quantity = 18
                        },
                        new
                        {
                            Id = 6,
                            Category = "Meat",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3734),
                            Description = "Boneless chicken breast",
                            ImageUrl = "https://images.unsplash.com/photo-1604503468506-a8da13d82791?w=300",
                            IsAvailable = true,
                            Name = "Chicken Breast",
                            Price = 8.99m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 19,
                            Category = "Meat",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3736),
                            Description = "Lean ground beef",
                            ImageUrl = "https://images.unsplash.com/photo-1588347818481-c7c1b8b8e8b8?w=300",
                            IsAvailable = true,
                            Name = "Ground Beef",
                            Price = 7.99m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 20,
                            Category = "Meat",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3739),
                            Description = "Fresh Atlantic salmon",
                            ImageUrl = "https://images.unsplash.com/photo-1544943910-4c1dc44aab44?w=300",
                            IsAvailable = true,
                            Name = "Salmon",
                            Price = 12.99m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 21,
                            Category = "Meat",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3741),
                            Description = "Bone-in pork chops",
                            ImageUrl = "https://images.unsplash.com/photo-1602470520998-f4a52199a3d6?w=300",
                            IsAvailable = true,
                            Name = "Pork Chops",
                            Price = 9.99m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 7,
                            Category = "Grains",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3743),
                            Description = "Basmati rice",
                            ImageUrl = "https://images.unsplash.com/photo-1586201375761-83865001e31c?w=300",
                            IsAvailable = true,
                            Name = "Rice",
                            Price = 5.99m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 22,
                            Category = "Grains",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3745),
                            Description = "Spaghetti pasta",
                            ImageUrl = "https://images.unsplash.com/photo-1551892374-ecf8754cf8b0?w=300",
                            IsAvailable = true,
                            Name = "Pasta",
                            Price = 2.99m,
                            Quantity = 85
                        },
                        new
                        {
                            Id = 23,
                            Category = "Grains",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3747),
                            Description = "Organic quinoa",
                            ImageUrl = "https://images.unsplash.com/photo-1586201375761-83865001e31c?w=300",
                            IsAvailable = true,
                            Name = "Quinoa",
                            Price = 7.99m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 24,
                            Category = "Grains",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3749),
                            Description = "Rolled oats",
                            ImageUrl = "https://images.unsplash.com/photo-1574323347407-f5e1ad6d020b?w=300",
                            IsAvailable = true,
                            Name = "Oats",
                            Price = 3.99m,
                            Quantity = 55
                        },
                        new
                        {
                            Id = 8,
                            Category = "Vegetables",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3751),
                            Description = "Fresh tomatoes",
                            ImageUrl = "https://images.unsplash.com/photo-1592924357228-91a4daadcfea?w=300",
                            IsAvailable = true,
                            Name = "Tomatoes",
                            Price = 3.99m,
                            Quantity = 90
                        },
                        new
                        {
                            Id = 25,
                            Category = "Vegetables",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3753),
                            Description = "Fresh carrots",
                            ImageUrl = "https://images.unsplash.com/photo-1598170845058-32b9d6a5da37?w=300",
                            IsAvailable = true,
                            Name = "Carrots",
                            Price = 2.49m,
                            Quantity = 75
                        },
                        new
                        {
                            Id = 26,
                            Category = "Vegetables",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3755),
                            Description = "Fresh broccoli",
                            ImageUrl = "https://images.unsplash.com/photo-1459411621453-7b03977f4bfc?w=300",
                            IsAvailable = true,
                            Name = "Broccoli",
                            Price = 3.49m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 27,
                            Category = "Vegetables",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3757),
                            Description = "Baby spinach leaves",
                            ImageUrl = "https://images.unsplash.com/photo-1576045057995-568f588f82fb?w=300",
                            IsAvailable = true,
                            Name = "Spinach",
                            Price = 2.99m,
                            Quantity = 65
                        },
                        new
                        {
                            Id = 28,
                            Category = "Vegetables",
                            CreatedAt = new DateTime(2025, 10, 18, 16, 11, 6, 130, DateTimeKind.Utc).AddTicks(3759),
                            Description = "Mixed bell peppers",
                            ImageUrl = "https://images.unsplash.com/photo-1563565375-f3fdfdbefa83?w=300",
                            IsAvailable = true,
                            Name = "Bell Peppers",
                            Price = 4.99m,
                            Quantity = 45
                        });
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliverySlot")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroceryItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroceryItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.Order", b =>
                {
                    b.HasOne("GroceryStoreAPI.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.OrderItem", b =>
                {
                    b.HasOne("GroceryStoreAPI.Models.GroceryItem", "GroceryItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("GroceryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryStoreAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroceryItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.GroceryItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("GroceryStoreAPI.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
