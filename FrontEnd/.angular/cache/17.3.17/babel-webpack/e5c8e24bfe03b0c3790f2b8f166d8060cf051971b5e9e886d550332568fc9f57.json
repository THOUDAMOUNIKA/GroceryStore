{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItems = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItems.asObservable();\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      this.cartItems.next(JSON.parse(savedCart));\n    }\n  }\n  addToCart(item, quantity = 1) {\n    const currentItems = this.cartItems.value;\n    const existingItem = currentItems.find(ci => ci.groceryItem.id === item.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      currentItems.push({\n        groceryItem: item,\n        quantity\n      });\n    }\n    this.updateCart(currentItems);\n  }\n  removeFromCart(itemId) {\n    const currentItems = this.cartItems.value.filter(ci => ci.groceryItem.id !== itemId);\n    this.updateCart(currentItems);\n  }\n  updateQuantity(itemId, quantity) {\n    const currentItems = this.cartItems.value;\n    const item = currentItems.find(ci => ci.groceryItem.id === itemId);\n    if (item) {\n      if (quantity <= 0) {\n        this.removeFromCart(itemId);\n      } else {\n        item.quantity = quantity;\n        this.updateCart(currentItems);\n      }\n    }\n  }\n  clearCart() {\n    this.updateCart([]);\n  }\n  updateCart(items) {\n    this.cartItems.next(items);\n    localStorage.setItem('cart', JSON.stringify(items));\n  }\n  get cartItemCount() {\n    return this.cartItems.value.reduce((total, item) => total + item.quantity, 0);\n  }\n  get cartTotal() {\n    return this.cartItems.value.reduce((total, item) => total + item.groceryItem.price * item.quantity, 0);\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cartItems","cartItems$","asObservable","savedCart","localStorage","getItem","next","JSON","parse","addToCart","item","quantity","currentItems","value","existingItem","find","ci","groceryItem","id","push","updateCart","removeFromCart","itemId","filter","updateQuantity","clearCart","items","setItem","stringify","cartItemCount","reduce","total","cartTotal","price","factory","ɵfac","providedIn"],"sources":["C:\\GroceryStore\\FrontEnd\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CartItem } from '../models/order.model';\nimport { GroceryItem } from '../models/grocery-item.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private cartItems = new BehaviorSubject<CartItem[]>([]);\n  public cartItems$ = this.cartItems.asObservable();\n\n  constructor() {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      this.cartItems.next(JSON.parse(savedCart));\n    }\n  }\n\n  addToCart(item: GroceryItem, quantity: number = 1): void {\n    const currentItems = this.cartItems.value;\n    const existingItem = currentItems.find(ci => ci.groceryItem.id === item.id);\n\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      currentItems.push({ groceryItem: item, quantity });\n    }\n\n    this.updateCart(currentItems);\n  }\n\n  removeFromCart(itemId: number): void {\n    const currentItems = this.cartItems.value.filter(ci => ci.groceryItem.id !== itemId);\n    this.updateCart(currentItems);\n  }\n\n  updateQuantity(itemId: number, quantity: number): void {\n    const currentItems = this.cartItems.value;\n    const item = currentItems.find(ci => ci.groceryItem.id === itemId);\n    \n    if (item) {\n      if (quantity <= 0) {\n        this.removeFromCart(itemId);\n      } else {\n        item.quantity = quantity;\n        this.updateCart(currentItems);\n      }\n    }\n  }\n\n  clearCart(): void {\n    this.updateCart([]);\n  }\n\n  private updateCart(items: CartItem[]): void {\n    this.cartItems.next(items);\n    localStorage.setItem('cart', JSON.stringify(items));\n  }\n\n  get cartItemCount(): number {\n    return this.cartItems.value.reduce((total, item) => total + item.quantity, 0);\n  }\n\n  get cartTotal(): number {\n    return this.cartItems.value.reduce((total, item) => \n      total + (item.groceryItem.price * item.quantity), 0);\n  }\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,SAAS,GAAG,IAAIH,eAAe,CAAa,EAAE,CAAC;IAChD,KAAAI,UAAU,GAAG,IAAI,CAACD,SAAS,CAACE,YAAY,EAAE;IAG/C,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI,CAACH,SAAS,CAACM,IAAI,CAACC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAAC;;EAE9C;EAEAM,SAASA,CAACC,IAAiB,EAAEC,QAAA,GAAmB,CAAC;IAC/C,MAAMC,YAAY,GAAG,IAAI,CAACZ,SAAS,CAACa,KAAK;IACzC,MAAMC,YAAY,GAAGF,YAAY,CAACG,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,WAAW,CAACC,EAAE,KAAKR,IAAI,CAACQ,EAAE,CAAC;IAE3E,IAAIJ,YAAY,EAAE;MAChBA,YAAY,CAACH,QAAQ,IAAIA,QAAQ;KAClC,MAAM;MACLC,YAAY,CAACO,IAAI,CAAC;QAAEF,WAAW,EAAEP,IAAI;QAAEC;MAAQ,CAAE,CAAC;;IAGpD,IAAI,CAACS,UAAU,CAACR,YAAY,CAAC;EAC/B;EAEAS,cAAcA,CAACC,MAAc;IAC3B,MAAMV,YAAY,GAAG,IAAI,CAACZ,SAAS,CAACa,KAAK,CAACU,MAAM,CAACP,EAAE,IAAIA,EAAE,CAACC,WAAW,CAACC,EAAE,KAAKI,MAAM,CAAC;IACpF,IAAI,CAACF,UAAU,CAACR,YAAY,CAAC;EAC/B;EAEAY,cAAcA,CAACF,MAAc,EAAEX,QAAgB;IAC7C,MAAMC,YAAY,GAAG,IAAI,CAACZ,SAAS,CAACa,KAAK;IACzC,MAAMH,IAAI,GAAGE,YAAY,CAACG,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,WAAW,CAACC,EAAE,KAAKI,MAAM,CAAC;IAElE,IAAIZ,IAAI,EAAE;MACR,IAAIC,QAAQ,IAAI,CAAC,EAAE;QACjB,IAAI,CAACU,cAAc,CAACC,MAAM,CAAC;OAC5B,MAAM;QACLZ,IAAI,CAACC,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACS,UAAU,CAACR,YAAY,CAAC;;;EAGnC;EAEAa,SAASA,CAAA;IACP,IAAI,CAACL,UAAU,CAAC,EAAE,CAAC;EACrB;EAEQA,UAAUA,CAACM,KAAiB;IAClC,IAAI,CAAC1B,SAAS,CAACM,IAAI,CAACoB,KAAK,CAAC;IAC1BtB,YAAY,CAACuB,OAAO,CAAC,MAAM,EAAEpB,IAAI,CAACqB,SAAS,CAACF,KAAK,CAAC,CAAC;EACrD;EAEA,IAAIG,aAAaA,CAAA;IACf,OAAO,IAAI,CAAC7B,SAAS,CAACa,KAAK,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAErB,IAAI,KAAKqB,KAAK,GAAGrB,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;EAC/E;EAEA,IAAIqB,SAASA,CAAA;IACX,OAAO,IAAI,CAAChC,SAAS,CAACa,KAAK,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAErB,IAAI,KAC7CqB,KAAK,GAAIrB,IAAI,CAACO,WAAW,CAACgB,KAAK,GAAGvB,IAAI,CAACC,QAAS,EAAE,CAAC,CAAC;EACxD;;;uBA3DWb,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}